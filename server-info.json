{
  "name": "Emily.Tools",
  "instructions": null,
  "fastmcp_version": "2.10.6",
  "mcp_version": "1.12.0",
  "server_version": "2.10.6",
  "tools": [
    {
      "key": "todo_create_area",
      "name": "todo_create_area",
      "description": "Create a new area (top-level organization) for grouping related projects and tasks",
      "input_schema": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Color"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "todo",
        "area",
        "organization",
        "create"
      ],
      "enabled": true
    },
    {
      "key": "todo_create_project",
      "name": "todo_create_project",
      "description": "Create a new project within an area to organize related tasks and goals",
      "input_schema": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "area_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Area Id"
          },
          "deadline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Deadline"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "todo",
        "project",
        "organization",
        "create"
      ],
      "enabled": true
    },
    {
      "key": "todo_create_task",
      "name": "todo_create_task",
      "description": "Create a new task with advanced features like scheduling, priority, and energy level tracking",
      "input_schema": {
        "$defs": {
          "EnergyLevel": {
            "description": "Energy levels for tasks.",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "title": "EnergyLevel",
            "type": "string"
          },
          "Priority": {
            "description": "Priority levels.",
            "enum": [
              "low",
              "medium",
              "high",
              "urgent",
              "critical"
            ],
            "title": "Priority",
            "type": "string"
          }
        },
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Description"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Project Id"
          },
          "area_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Area Id"
          },
          "priority": {
            "$ref": "#/$defs/Priority",
            "default": "medium",
            "title": "Priority"
          },
          "scheduled_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Scheduled Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Due Date"
          },
          "energy_level": {
            "$ref": "#/$defs/EnergyLevel",
            "default": "medium",
            "title": "Energy Level"
          },
          "time_estimate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Time Estimate"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Tags"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "todo",
        "task",
        "productivity",
        "create"
      ],
      "enabled": true
    },
    {
      "key": "todo_create_task_nl",
      "name": "todo_create_task_nl",
      "description": "Create task from natural language input using AI to parse intent, priority, and scheduling",
      "input_schema": {
        "properties": {
          "input_text": {
            "title": "Input Text",
            "type": "string"
          }
        },
        "required": [
          "input_text"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "todo",
        "ai",
        "natural-language",
        "create"
      ],
      "enabled": true
    },
    {
      "key": "todo_create_from_conversation",
      "name": "todo_create_from_conversation",
      "description": "Create task from conversation context by analyzing chat history and extracting actionable items",
      "input_schema": {
        "properties": {
          "context_id": {
            "title": "Context Id",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Title"
          }
        },
        "required": [
          "context_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "todo",
        "ai",
        "create",
        "conversation"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_today",
      "name": "todo_get_today",
      "description": "Get today's tasks with AI suggestions for prioritization and scheduling optimization",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "today",
        "task",
        "todo",
        "ai",
        "schedule"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_evening",
      "name": "todo_get_evening",
      "description": "Get tasks suitable for evening work based on energy level and context requirements",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "todo",
        "evening",
        "energy",
        "schedule"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_upcoming",
      "name": "todo_get_upcoming",
      "description": "Get upcoming tasks and events within a specified timeframe for planning and preparation",
      "input_schema": {
        "properties": {
          "days": {
            "default": 7,
            "title": "Days",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "upcoming",
        "task",
        "todo",
        "schedule",
        "planning"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_anytime",
      "name": "todo_get_anytime",
      "description": "Get tasks without specific scheduling that can be done at any convenient time",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "flexible",
        "todo",
        "schedule",
        "anytime"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_someday",
      "name": "todo_get_someday",
      "description": "Get tasks marked for future consideration that are not immediately actionable",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "someday",
        "task",
        "future",
        "todo",
        "planning"
      ],
      "enabled": true
    },
    {
      "key": "todo_list_areas",
      "name": "todo_list_areas",
      "description": "List all areas (top-level organization containers) with optional status filtering",
      "input_schema": {
        "$defs": {
          "AreaStatus": {
            "description": "Area status values.",
            "enum": [
              "active",
              "archived"
            ],
            "title": "AreaStatus",
            "type": "string"
          }
        },
        "properties": {
          "status": {
            "$ref": "#/$defs/AreaStatus",
            "default": "active",
            "title": "Status"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "todo",
        "area",
        "organization",
        "list"
      ],
      "enabled": true
    },
    {
      "key": "todo_list_projects",
      "name": "todo_list_projects",
      "description": "List projects with optional filtering by area and status for project management overview",
      "input_schema": {
        "$defs": {
          "ProjectStatus": {
            "description": "Project status values.",
            "enum": [
              "active",
              "completed",
              "on_hold",
              "cancelled"
            ],
            "title": "ProjectStatus",
            "type": "string"
          }
        },
        "properties": {
          "area_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Area Id"
          },
          "status": {
            "$ref": "#/$defs/ProjectStatus",
            "default": "active",
            "title": "Status"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "todo",
        "management",
        "list",
        "organization",
        "project"
      ],
      "enabled": true
    },
    {
      "key": "todo_complete_task",
      "name": "todo_complete_task",
      "description": "Mark a task as completed and update its status with completion metadata",
      "input_schema": {
        "properties": {
          "task_id": {
            "title": "Task Id",
            "type": "string"
          }
        },
        "required": [
          "task_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "update",
        "task",
        "complete",
        "status",
        "todo"
      ],
      "enabled": true
    },
    {
      "key": "todo_complete_project",
      "name": "todo_complete_project",
      "description": "Complete a project and all its associated tasks in bulk operation",
      "input_schema": {
        "properties": {
          "project_id": {
            "title": "Project Id",
            "type": "string"
          }
        },
        "required": [
          "project_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "complete",
        "todo",
        "bulk",
        "management",
        "project"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_project_progress",
      "name": "todo_get_project_progress",
      "description": "Get detailed project progress including completion rates, task breakdown, and milestones",
      "input_schema": {
        "properties": {
          "project_id": {
            "title": "Project Id",
            "type": "string"
          }
        },
        "required": [
          "project_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "analytics",
        "tracking",
        "todo",
        "progress",
        "project"
      ],
      "enabled": true
    },
    {
      "key": "todo_project_timeline",
      "name": "todo_project_timeline",
      "description": "Get complete project timeline across all data types including tasks, milestones, and deadlines",
      "input_schema": {
        "properties": {
          "project_id": {
            "title": "Project Id",
            "type": "string"
          }
        },
        "required": [
          "project_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "history",
        "tracking",
        "timeline",
        "todo",
        "project"
      ],
      "enabled": true
    },
    {
      "key": "todo_suggest_priorities",
      "name": "todo_suggest_priorities",
      "description": "Get AI-suggested task priorities based on context, deadlines, and workload analysis",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "todo",
        "ai",
        "priorities",
        "suggestions"
      ],
      "enabled": true
    },
    {
      "key": "todo_quick_find",
      "name": "todo_quick_find",
      "description": "Quick semantic search across tasks, projects, and areas using AI-powered search capabilities",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "semantic",
        "todo",
        "ai",
        "search",
        "find"
      ],
      "enabled": true
    },
    {
      "key": "todo_update_task",
      "name": "todo_update_task",
      "description": "Update a task's properties including status, priority, scheduling, and project assignment",
      "input_schema": {
        "$defs": {
          "EnergyLevel": {
            "description": "Energy levels for tasks.",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "title": "EnergyLevel",
            "type": "string"
          },
          "Priority": {
            "description": "Priority levels.",
            "enum": [
              "low",
              "medium",
              "high",
              "urgent",
              "critical"
            ],
            "title": "Priority",
            "type": "string"
          },
          "TaskStatus": {
            "description": "Task status values.",
            "enum": [
              "pending",
              "in_progress",
              "completed",
              "cancelled"
            ],
            "title": "TaskStatus",
            "type": "string"
          }
        },
        "properties": {
          "task_id": {
            "title": "Task Id",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Description"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/$defs/TaskStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Status"
          },
          "priority": {
            "anyOf": [
              {
                "$ref": "#/$defs/Priority"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Priority"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Project Id"
          },
          "area_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Area Id"
          },
          "scheduled_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Scheduled Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Due Date"
          },
          "energy_level": {
            "anyOf": [
              {
                "$ref": "#/$defs/EnergyLevel"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Energy Level"
          },
          "time_estimate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Time Estimate"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Tags"
          }
        },
        "required": [
          "task_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "update",
        "task",
        "todo",
        "management",
        "modify"
      ],
      "enabled": true
    },
    {
      "key": "todo_update_project",
      "name": "todo_update_project",
      "description": "Update a project's properties.",
      "input_schema": {
        "$defs": {
          "ProjectStatus": {
            "description": "Project status values.",
            "enum": [
              "active",
              "completed",
              "on_hold",
              "cancelled"
            ],
            "title": "ProjectStatus",
            "type": "string"
          }
        },
        "properties": {
          "project_id": {
            "title": "Project Id",
            "type": "string"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Description"
          },
          "area_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Area Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/$defs/ProjectStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Status"
          },
          "deadline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Deadline"
          },
          "progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Progress"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Color"
          }
        },
        "required": [
          "project_id"
        ],
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "todo_archive_area",
      "name": "todo_archive_area",
      "description": "Archive an area and all its projects to remove them from active view while preserving data",
      "input_schema": {
        "properties": {
          "area_id": {
            "title": "Area Id",
            "type": "string"
          }
        },
        "required": [
          "area_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "area",
        "cleanup",
        "todo",
        "organization",
        "archive"
      ],
      "enabled": true
    },
    {
      "key": "todo_delete_task",
      "name": "todo_delete_task",
      "description": "Permanently delete a task from the system",
      "input_schema": {
        "properties": {
          "task_id": {
            "title": "Task Id",
            "type": "string"
          }
        },
        "required": [
          "task_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "cleanup",
        "todo",
        "delete",
        "remove"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_statistics",
      "name": "todo_get_statistics",
      "description": "Get comprehensive todo statistics including task counts, project status, and productivity metrics",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "analytics",
        "overview",
        "todo",
        "metrics",
        "statistics"
      ],
      "enabled": true
    },
    {
      "key": "todo_search_tasks",
      "name": "todo_search_tasks",
      "description": "Search tasks with advanced filtering capabilities including metadata, tags, and content search",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Filters"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "filter",
        "advanced",
        "todo",
        "search"
      ],
      "enabled": true
    },
    {
      "key": "todo_get_task_details",
      "name": "todo_get_task_details",
      "description": "Get detailed task information including relationships, project context, and area assignments",
      "input_schema": {
        "properties": {
          "task_id": {
            "title": "Task Id",
            "type": "string"
          }
        },
        "required": [
          "task_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "task",
        "relationships",
        "details",
        "todo",
        "context"
      ],
      "enabled": true
    },
    {
      "key": "automation_register_workflow",
      "name": "automation_register_workflow",
      "description": "Register a new automation workflow with triggers, conditions, and actions",
      "input_schema": {
        "$defs": {
          "Workflow": {
            "description": "Workflow definition.",
            "properties": {
              "id": {
                "title": "Id",
                "type": "string"
              },
              "name": {
                "title": "Name",
                "type": "string"
              },
              "description": {
                "title": "Description",
                "type": "string"
              },
              "trigger": {
                "$ref": "#/$defs/WorkflowTrigger"
              },
              "actions": {
                "items": {
                  "$ref": "#/$defs/WorkflowAction"
                },
                "title": "Actions",
                "type": "array"
              },
              "enabled": {
                "default": true,
                "title": "Enabled",
                "type": "boolean"
              },
              "created_at": {
                "format": "date-time",
                "title": "Created At",
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "title": "Updated At",
                "type": "string"
              }
            },
            "required": [
              "name",
              "description",
              "trigger",
              "actions"
            ],
            "title": "Workflow",
            "type": "object"
          },
          "WorkflowAction": {
            "description": "Individual action within a workflow.",
            "properties": {
              "type": {
                "$ref": "#/$defs/WorkflowActionType"
              },
              "params": {
                "additionalProperties": true,
                "title": "Params",
                "type": "object"
              },
              "condition": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Condition"
              }
            },
            "required": [
              "type",
              "params"
            ],
            "title": "WorkflowAction",
            "type": "object"
          },
          "WorkflowActionType": {
            "description": "Enumeration of supported workflow action types.",
            "enum": [
              "create_task",
              "update_entity",
              "save_relation",
              "notify",
              "run_shell",
              "http_request"
            ],
            "title": "WorkflowActionType",
            "type": "string"
          },
          "WorkflowTrigger": {
            "description": "Trigger definition for a workflow.",
            "properties": {
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Type"
              },
              "content": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Content"
              },
              "name": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Name"
              },
              "tags": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Tags"
              },
              "metadata": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Metadata"
              },
              "event_type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Event Type"
              },
              "schedule": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Schedule"
              }
            },
            "title": "WorkflowTrigger",
            "type": "object"
          }
        },
        "properties": {
          "workflow": {
            "$ref": "#/$defs/Workflow",
            "title": "Workflow"
          }
        },
        "required": [
          "workflow"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "automation",
        "register",
        "configuration",
        "create",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_list_workflows",
      "name": "automation_list_workflows",
      "description": "List all registered automation workflows with optional filtering by enabled status",
      "input_schema": {
        "properties": {
          "enabled_only": {
            "default": false,
            "title": "Enabled Only",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "view",
        "automation",
        "management",
        "list",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_get_workflow",
      "name": "automation_get_workflow",
      "description": "Get detailed information about a specific automation workflow including configuration and status",
      "input_schema": {
        "properties": {
          "workflow_id": {
            "title": "Workflow Id",
            "type": "string"
          }
        },
        "required": [
          "workflow_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "view",
        "details",
        "automation",
        "get",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_delete_workflow",
      "name": "automation_delete_workflow",
      "description": "Permanently delete an automation workflow and stop all its scheduled executions",
      "input_schema": {
        "properties": {
          "workflow_id": {
            "title": "Workflow Id",
            "type": "string"
          }
        },
        "required": [
          "workflow_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "cleanup",
        "delete",
        "remove",
        "automation",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_pause_workflow",
      "name": "automation_pause_workflow",
      "description": "Pause an automation workflow to temporarily stop its execution without deleting it",
      "input_schema": {
        "properties": {
          "workflow_id": {
            "title": "Workflow Id",
            "type": "string"
          }
        },
        "required": [
          "workflow_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": false,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "pause",
        "automation",
        "management",
        "control",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_resume_workflow",
      "name": "automation_resume_workflow",
      "description": "Resume a paused automation workflow to continue its scheduled execution",
      "input_schema": {
        "properties": {
          "workflow_id": {
            "title": "Workflow Id",
            "type": "string"
          }
        },
        "required": [
          "workflow_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": false,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "resume",
        "automation",
        "management",
        "control",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_trigger_workflow",
      "name": "automation_trigger_workflow",
      "description": "Manually trigger an automation workflow with optional event data for immediate execution",
      "input_schema": {
        "properties": {
          "workflow_id": {
            "title": "Workflow Id",
            "type": "string"
          },
          "event_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Event Data"
          }
        },
        "required": [
          "workflow_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": false,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "trigger",
        "automation",
        "manual",
        "execute",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_list_runs",
      "name": "automation_list_runs",
      "description": "List automation workflow runs with optional filtering by workflow and execution history",
      "input_schema": {
        "properties": {
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Workflow Id"
          },
          "limit": {
            "default": 50,
            "title": "Limit",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "history",
        "automation",
        "monitoring",
        "runs",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_get_run",
      "name": "automation_get_run",
      "description": "Get detailed information about a specific workflow run including status, logs, and results",
      "input_schema": {
        "properties": {
          "run_id": {
            "title": "Run Id",
            "type": "string"
          }
        },
        "required": [
          "run_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "run",
        "details",
        "automation",
        "monitoring",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_get_workflow_suggestions",
      "name": "automation_get_workflow_suggestions",
      "description": "Get intelligent workflow suggestions based on query patterns and usage analytics",
      "input_schema": {
        "properties": {
          "query": {
            "default": "",
            "title": "Query",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "ai",
        "automation",
        "suggestions",
        "recommendations",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_approve_workflow_suggestion",
      "name": "automation_approve_workflow_suggestion",
      "description": "Approve and implement a workflow suggestion to create an active automation workflow",
      "input_schema": {
        "properties": {
          "suggestion_id": {
            "title": "Suggestion Id",
            "type": "string"
          }
        },
        "required": [
          "suggestion_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "implement",
        "automation",
        "suggestions",
        "approve",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "automation_get_suggestion_metrics",
      "name": "automation_get_suggestion_metrics",
      "description": "Get analytics and metrics for workflow suggestions including approval rates and effectiveness",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "analytics",
        "performance",
        "metrics",
        "automation",
        "suggestions"
      ],
      "enabled": true
    },
    {
      "key": "handoff_save",
      "name": "handoff_save",
      "description": "Save chat context for handoff between sessions with AI enhancement.",
      "input_schema": {
        "properties": {
          "context": {
            "title": "Context",
            "type": "string"
          }
        },
        "required": [
          "context"
        ],
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "handoff_get",
      "name": "handoff_get",
      "description": null,
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "handoff_list",
      "name": "handoff_list",
      "description": "List recent saved chat contexts.",
      "input_schema": {
        "properties": {
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "handoff_search",
      "name": "handoff_search",
      "description": "Search handoff contexts by content using AI semantic search.",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "handoff_related",
      "name": "handoff_related",
      "description": "Get contexts related to the specified context through entities and topics.",
      "input_schema": {
        "properties": {
          "context_id": {
            "title": "Context Id",
            "type": "string"
          }
        },
        "required": [
          "context_id"
        ],
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "handoff_insights",
      "name": "handoff_insights",
      "description": "Get AI-generated insights about a handoff context.",
      "input_schema": {
        "properties": {
          "context_id": {
            "title": "Context Id",
            "type": "string"
          }
        },
        "required": [
          "context_id"
        ],
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "handoff_suggest_actions",
      "name": "handoff_suggest_actions",
      "description": "Get suggested follow-up actions for a context.",
      "input_schema": {
        "properties": {
          "context_id": {
            "title": "Context Id",
            "type": "string"
          }
        },
        "required": [
          "context_id"
        ],
        "type": "object"
      },
      "annotations": null,
      "tags": null,
      "enabled": true
    },
    {
      "key": "graph_find_related",
      "name": "graph_find_related",
      "description": "Find entities related to a given entity within a specified depth using graph traversal algorithms",
      "input_schema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "string"
          },
          "depth": {
            "default": 2,
            "title": "Depth",
            "type": "integer"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "entity_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "relationships",
        "search",
        "knowledge",
        "traversal"
      ],
      "enabled": true
    },
    {
      "key": "graph_search",
      "name": "graph_search",
      "description": "Search for entities in the knowledge graph using semantic search with optional type filtering",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "entity_type": {
            "anyOf": [
              {
                "enum": [
                  "person",
                  "project",
                  "task",
                  "technology",
                  "concept",
                  "organization",
                  "location",
                  "event",
                  "document",
                  "code",
                  "data",
                  "system",
                  "process",
                  "goal",
                  "problem",
                  "solution",
                  "requirement",
                  "constraint",
                  "resource",
                  "milestone"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Entity Type"
          },
          "limit": {
            "default": 20,
            "title": "Limit",
            "type": "integer"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "filter",
        "semantic",
        "entities",
        "search"
      ],
      "enabled": true
    },
    {
      "key": "graph_create_entity",
      "name": "graph_create_entity",
      "description": "Create a new entity in the knowledge graph with specified properties and metadata",
      "input_schema": {
        "properties": {
          "payload": {
            "additionalProperties": true,
            "title": "Payload",
            "type": "object"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "payload"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "entity",
        "data",
        "create",
        "knowledge"
      ],
      "enabled": true
    },
    {
      "key": "graph_create_relation",
      "name": "graph_create_relation",
      "description": "Create a new relation between two entities with specified type, strength, and metadata",
      "input_schema": {
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "relation_type": {
            "enum": [
              "related_to",
              "part_of",
              "depends_on",
              "similar_to",
              "opposite_of",
              "causes",
              "influences",
              "belongs_to",
              "works_with",
              "reports_to",
              "manages",
              "collaborates_with",
              "references",
              "implements",
              "extends",
              "uses",
              "creates",
              "owns",
              "follows",
              "mentions"
            ],
            "title": "Relation Type",
            "type": "string"
          },
          "strength": {
            "default": 1.0,
            "title": "Strength",
            "type": "number"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Metadata"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "source_id",
          "target_id",
          "relation_type"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "connection",
        "relation",
        "create",
        "knowledge"
      ],
      "enabled": true
    },
    {
      "key": "graph_get_entity",
      "name": "graph_get_entity",
      "description": "Get detailed information about a specific entity by its ID including properties and metadata",
      "input_schema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "string"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "entity_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "retrieve",
        "details",
        "entity",
        "get"
      ],
      "enabled": true
    },
    {
      "key": "graph_get_relations",
      "name": "graph_get_relations",
      "description": "Get all relations for a specific entity with optional filtering by relation types",
      "input_schema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "string"
          },
          "relation_types": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "related_to",
                    "part_of",
                    "depends_on",
                    "similar_to",
                    "opposite_of",
                    "causes",
                    "influences",
                    "belongs_to",
                    "works_with",
                    "reports_to",
                    "manages",
                    "collaborates_with",
                    "references",
                    "implements",
                    "extends",
                    "uses",
                    "creates",
                    "owns",
                    "follows",
                    "mentions"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Relation Types"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "entity_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "filter",
        "connections",
        "entity",
        "relations"
      ],
      "enabled": true
    },
    {
      "key": "graph_shortest_path",
      "name": "graph_shortest_path",
      "description": "Find the shortest path between two entities using graph algorithms for relationship discovery",
      "input_schema": {
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "algorithm",
        "connection",
        "shortest",
        "path"
      ],
      "enabled": true
    },
    {
      "key": "graph_find_clusters",
      "name": "graph_find_clusters",
      "description": "Find clusters of related entities using community detection algorithms for pattern discovery",
      "input_schema": {
        "properties": {
          "entity_type": {
            "anyOf": [
              {
                "enum": [
                  "person",
                  "project",
                  "task",
                  "technology",
                  "concept",
                  "organization",
                  "location",
                  "event",
                  "document",
                  "code",
                  "data",
                  "system",
                  "process",
                  "goal",
                  "problem",
                  "solution",
                  "requirement",
                  "constraint",
                  "resource",
                  "milestone"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Entity Type"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "community",
        "detection",
        "clusters",
        "patterns"
      ],
      "enabled": true
    },
    {
      "key": "graph_get_centrality",
      "name": "graph_get_centrality",
      "description": "Get centrality score for an entity to measure its importance and influence in the knowledge graph",
      "input_schema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "string"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "entity_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "influence",
        "centrality",
        "metrics",
        "importance"
      ],
      "enabled": true
    },
    {
      "key": "graph_delete_entity",
      "name": "graph_delete_entity",
      "description": "Delete an entity and all its relations from the knowledge graph permanently",
      "input_schema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "string"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "entity_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "cleanup",
        "delete",
        "entity",
        "remove"
      ],
      "enabled": true
    },
    {
      "key": "graph_delete_relation",
      "name": "graph_delete_relation",
      "description": "Delete a specific relation between entities from the knowledge graph",
      "input_schema": {
        "properties": {
          "relation_id": {
            "title": "Relation Id",
            "type": "string"
          },
          "ctx": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ctx"
          }
        },
        "required": [
          "relation_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": null,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "graph",
        "connection",
        "delete",
        "remove",
        "relation"
      ],
      "enabled": true
    },
    {
      "key": "intelligent_search",
      "name": "intelligent_search",
      "description": "Advanced semantic search with cross-domain intelligence for finding related information across all data types",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "context": {
            "additionalProperties": true,
            "default": null,
            "title": "Context",
            "type": "object"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "cross-domain",
        "semantic",
        "ai",
        "search",
        "intelligence"
      ],
      "enabled": true
    },
    {
      "key": "natural_query",
      "name": "natural_query",
      "description": "Process natural language queries with intelligent interpretation and context understanding",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "interpretation",
        "ai",
        "natural-language",
        "search",
        "query"
      ],
      "enabled": true
    },
    {
      "key": "get_project_intelligence",
      "name": "get_project_intelligence",
      "description": "Get comprehensive project intelligence including related tasks, people, technologies, and insights",
      "input_schema": {
        "properties": {
          "project_id": {
            "title": "Project Id",
            "type": "string"
          }
        },
        "required": [
          "project_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "analytics",
        "comprehensive",
        "project",
        "insights",
        "intelligence"
      ],
      "enabled": true
    },
    {
      "key": "get_smart_suggestions",
      "name": "get_smart_suggestions",
      "description": "Get contextual suggestions based on current entity and activity patterns using AI analysis",
      "input_schema": {
        "properties": {
          "context": {
            "additionalProperties": true,
            "title": "Context",
            "type": "object"
          }
        },
        "required": [
          "context"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "smart",
        "ai",
        "suggestions",
        "contextual",
        "recommendations"
      ],
      "enabled": true
    },
    {
      "key": "intent_based_search",
      "name": "intent_based_search",
      "description": "Understand search intent from natural language and provide contextual results with AI interpretation",
      "input_schema": {
        "properties": {
          "natural_query": {
            "title": "Natural Query",
            "type": "string"
          }
        },
        "required": [
          "natural_query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "ai",
        "natural-language",
        "intent",
        "search",
        "contextual"
      ],
      "enabled": true
    },
    {
      "key": "get_workflow_suggestions",
      "name": "get_workflow_suggestions",
      "description": "Get intelligent workflow suggestions based on user's current activity and historical patterns",
      "input_schema": {
        "properties": {
          "user_context": {
            "additionalProperties": true,
            "default": null,
            "title": "User Context",
            "type": "object"
          }
        },
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "productivity",
        "ai",
        "automation",
        "suggestions",
        "workflow"
      ],
      "enabled": true
    },
    {
      "key": "complex_query",
      "name": "complex_query",
      "description": "Process complex queries with multiple clauses and relationships using advanced AI parsing",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "relationships",
        "ai",
        "parsing",
        "search",
        "complex"
      ],
      "enabled": true
    },
    {
      "key": "get_expertise_map",
      "name": "get_expertise_map",
      "description": "Create expertise map from conversation and code patterns to identify knowledge distribution",
      "input_schema": {
        "properties": {},
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": false,
        "openWorldHint": null
      },
      "tags": [
        "mapping",
        "ai",
        "expertise",
        "analysis",
        "knowledge"
      ],
      "enabled": true
    },
    {
      "key": "get_cross_domain_insights",
      "name": "get_cross_domain_insights",
      "description": "Get cross-domain insights for a specific entity by analyzing relationships across different data types",
      "input_schema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "string"
          }
        },
        "required": [
          "entity_id"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "cross-domain",
        "relationships",
        "ai",
        "analysis",
        "insights"
      ],
      "enabled": true
    },
    {
      "key": "search_with_context",
      "name": "search_with_context",
      "description": "Search with additional context about the current entity for more accurate and relevant results",
      "input_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "entity_context": {
            "default": null,
            "title": "Entity Context",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "annotations": {
        "title": null,
        "readOnlyHint": true,
        "destructiveHint": null,
        "idempotentHint": true,
        "openWorldHint": null
      },
      "tags": [
        "relevance",
        "enhanced",
        "entity",
        "search",
        "contextual"
      ],
      "enabled": true
    }
  ],
  "prompts": [],
  "resources": [],
  "templates": [],
  "capabilities": {
    "tools": {
      "listChanged": true
    },
    "resources": {
      "subscribe": false,
      "listChanged": false
    },
    "prompts": {
      "listChanged": false
    },
    "logging": {}
  }
}